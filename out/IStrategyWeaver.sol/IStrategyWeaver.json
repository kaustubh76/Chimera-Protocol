{"abi":[{"type":"function","name":"addInvestment","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"approve","inputs":[{"name":"to","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"authorizeStrategist","inputs":[{"name":"strategist","type":"address","internalType":"address"},{"name":"authorized","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"balanceOf","inputs":[{"name":"owner","type":"address","internalType":"address"}],"outputs":[{"name":"balance","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"createPortfolio","inputs":[{"name":"assetAddresses","type":"address[]","internalType":"address[]"},{"name":"encryptedWeights","type":"uint256[]","internalType":"euint64[]"},{"name":"encryptedRebalanceStrategy","type":"bytes32","internalType":"bytes32"},{"name":"investor","type":"address","internalType":"address"},{"name":"initialInvestment","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"executeRebalancing","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getApproved","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"operator","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getPortfolioHoldings","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"assetAddresses","type":"address[]","internalType":"address[]"},{"name":"holdingsArray","type":"tuple[]","internalType":"struct IStrategyWeaver.AssetHolding[]","components":[{"name":"assetAddress","type":"address","internalType":"address"},{"name":"encryptedBalance","type":"uint256","internalType":"euint64"},{"name":"encryptedTargetWeight","type":"uint256","internalType":"euint64"},{"name":"lastUpdate","type":"uint256","internalType":"uint256"}]}],"stateMutability":"view"},{"type":"function","name":"getPortfolioPerformance","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"tuple","internalType":"struct IStrategyWeaver.PerformanceData","components":[{"name":"encryptedInitialValue","type":"uint256","internalType":"euint64"},{"name":"encryptedCurrentValue","type":"uint256","internalType":"euint64"},{"name":"encryptedHighWaterMark","type":"uint256","internalType":"euint64"},{"name":"totalReturn","type":"uint256","internalType":"uint256"},{"name":"sharpeRatio","type":"uint256","internalType":"uint256"},{"name":"maxDrawdown","type":"uint256","internalType":"uint256"},{"name":"lastUpdate","type":"uint256","internalType":"uint256"}]}],"stateMutability":"view"},{"type":"function","name":"getStrategistPortfolios","inputs":[{"name":"strategist","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"isApprovedForAll","inputs":[{"name":"owner","type":"address","internalType":"address"},{"name":"operator","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"ownerOf","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"owner","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"pause","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"safeTransferFrom","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"safeTransferFrom","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setApprovalForAll","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"approved","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"supportsInterface","inputs":[{"name":"interfaceId","type":"bytes4","internalType":"bytes4"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"transferFrom","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"unpause","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"withdrawInvestment","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"Approval","inputs":[{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"approved","type":"address","indexed":true,"internalType":"address"},{"name":"tokenId","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"ApprovalForAll","inputs":[{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"operator","type":"address","indexed":true,"internalType":"address"},{"name":"approved","type":"bool","indexed":false,"internalType":"bool"}],"anonymous":false},{"type":"event","name":"Transfer","inputs":[{"name":"from","type":"address","indexed":true,"internalType":"address"},{"name":"to","type":"address","indexed":true,"internalType":"address"},{"name":"tokenId","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"addInvestment(uint256,uint256)":"1b292d26","approve(address,uint256)":"095ea7b3","authorizeStrategist(address,bool)":"2a1b5d71","balanceOf(address)":"70a08231","createPortfolio(address[],uint256[],bytes32,address,uint256)":"664e8c58","executeRebalancing(uint256)":"59ec67b2","getApproved(uint256)":"081812fc","getPortfolioHoldings(uint256)":"cdf36392","getPortfolioPerformance(uint256)":"c7efaf59","getStrategistPortfolios(address)":"0c98849f","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","pause()":"8456cb59","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd","unpause()":"3f4ba83a","withdrawInvestment(uint256,uint256)":"09b49c46"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"addInvestment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategist\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"authorized\",\"type\":\"bool\"}],\"name\":\"authorizeStrategist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assetAddresses\",\"type\":\"address[]\"},{\"internalType\":\"euint64[]\",\"name\":\"encryptedWeights\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes32\",\"name\":\"encryptedRebalanceStrategy\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"investor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialInvestment\",\"type\":\"uint256\"}],\"name\":\"createPortfolio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"executeRebalancing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getPortfolioHoldings\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"assetAddresses\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"assetAddress\",\"type\":\"address\"},{\"internalType\":\"euint64\",\"name\":\"encryptedBalance\",\"type\":\"uint256\"},{\"internalType\":\"euint64\",\"name\":\"encryptedTargetWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdate\",\"type\":\"uint256\"}],\"internalType\":\"struct IStrategyWeaver.AssetHolding[]\",\"name\":\"holdingsArray\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getPortfolioPerformance\",\"outputs\":[{\"components\":[{\"internalType\":\"euint64\",\"name\":\"encryptedInitialValue\",\"type\":\"uint256\"},{\"internalType\":\"euint64\",\"name\":\"encryptedCurrentValue\",\"type\":\"uint256\"},{\"internalType\":\"euint64\",\"name\":\"encryptedHighWaterMark\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalReturn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sharpeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDrawdown\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdate\",\"type\":\"uint256\"}],\"internalType\":\"struct IStrategyWeaver.PerformanceData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategist\",\"type\":\"address\"}],\"name\":\"getStrategistPortfolios\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawInvestment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Enables encrypted asset weights and automated rebalancing\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"addInvestment(uint256,uint256)\":{\"params\":{\"amount\":\"Investment amount\",\"tokenId\":\"Portfolio token ID\"}},\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"authorizeStrategist(address,bool)\":{\"params\":{\"authorized\":\"Authorization status\",\"strategist\":\"Strategist address\"}},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"createPortfolio(address[],uint256[],bytes32,address,uint256)\":{\"params\":{\"assetAddresses\":\"Array of asset addresses\",\"encryptedRebalanceStrategy\":\"Encrypted rebalancing strategy\",\"encryptedWeights\":\"Array of encrypted allocation weights\",\"initialInvestment\":\"Initial investment amount\",\"investor\":\"Initial investor address\"},\"returns\":{\"tokenId\":\"The portfolio NFT token ID\"}},\"executeRebalancing(uint256)\":{\"params\":{\"tokenId\":\"Portfolio token ID\"}},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"getPortfolioHoldings(uint256)\":{\"params\":{\"tokenId\":\"Portfolio token ID\"},\"returns\":{\"assetAddresses\":\"Array of asset addresses\",\"holdingsArray\":\"Array of asset holdings\"}},\"getPortfolioPerformance(uint256)\":{\"params\":{\"tokenId\":\"Portfolio token ID\"},\"returns\":{\"_0\":\"performance Performance data struct\"}},\"getStrategistPortfolios(address)\":{\"params\":{\"strategist\":\"Strategist address\"},\"returns\":{\"_0\":\"portfolioIds Array of portfolio token IDs\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"},\"withdrawInvestment(uint256,uint256)\":{\"params\":{\"amount\":\"Withdrawal amount\",\"tokenId\":\"Portfolio token ID\"}}},\"title\":\"IStrategyWeaver\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addInvestment(uint256,uint256)\":{\"notice\":\"Add investment to portfolio\"},\"authorizeStrategist(address,bool)\":{\"notice\":\"Authorize strategist\"},\"createPortfolio(address[],uint256[],bytes32,address,uint256)\":{\"notice\":\"Create a new ZK-Portfolio with encrypted allocations\"},\"executeRebalancing(uint256)\":{\"notice\":\"Execute confidential rebalancing for a portfolio\"},\"getPortfolioHoldings(uint256)\":{\"notice\":\"Get portfolio asset holdings\"},\"getPortfolioPerformance(uint256)\":{\"notice\":\"Get portfolio performance data\"},\"getStrategistPortfolios(address)\":{\"notice\":\"Get strategist's portfolios\"},\"pause()\":{\"notice\":\"Emergency pause\"},\"unpause()\":{\"notice\":\"Unpause\"},\"withdrawInvestment(uint256,uint256)\":{\"notice\":\"Withdraw investment from portfolio\"}},\"notice\":\"Interface for confidential portfolio composition and management\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IStrategyWeaver.sol\":\"IStrategyWeaver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"appendCBOR\":false,\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":@ensdomains/=lib/v4-core/node_modules/@ensdomains/\",\":@fhenixprotocol/cofhe-contracts/=lib/cofhe-contracts/contracts/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@uniswap/v4-core/=lib/v4-core/\",\":@uniswap/v4-periphery/=lib/v4-periphery/\",\":cofhe-contracts/=lib/cofhe-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/v4-periphery/lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/openzeppelin-contracts/lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":hardhat/=lib/v4-core/node_modules/hardhat/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":permit2/=lib/v4-periphery/lib/permit2/\",\":solmate/=lib/solmate/\",\":v4-core/=lib/v4-core/src/\",\":v4-periphery/=lib/v4-periphery/\"],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IStrategyWeaver.sol\":{\"keccak256\":\"0x9eb8952b5f3e76bd2c6f6aef526bf5d34d586917eeb81717537074bf4f0392bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae39a40bd3fcdd134bb7435760a80f285cf20e91148671acf8c48be446551915\",\"dweb:/ipfs/QmRQm8vXMkntwXLLz7uyiBanKtaw3fGRfrNREytH8Bmods\"]},\"lib/cofhe-contracts/contracts/FHE.sol\":{\"keccak256\":\"0xa850911671ce967d9ef45aab0a06aa39deba00e2b0433e73e2cb0198c8461695\",\"license\":\"BSD-3-Clause-Clear\",\"urls\":[\"bzz-raw://6ff83ccb482f2ccbed559677667fe29de1e5da976e03a0390daf726ddf76a7ff\",\"dweb:/ipfs/QmdHHmgf9sfYnHpnJsR8qo8zgpYVQffAyTepdQvQcySXrp\"]},\"lib/cofhe-contracts/contracts/ICofhe.sol\":{\"keccak256\":\"0x16eb495f5f2b8f26f14b592a414fea16a3342a6d14e33b1731d8fa73b10a4182\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://9ad70bb3aa7bf5f048ea17ed8e4d3550a97a4234dbe67601cd37d764759cf633\",\"dweb:/ipfs/Qmf7vpWCe32ZhihHJyF6z9GWGvpFmZioBEYNTSTdSiKkho\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"lib/openzeppelin-contracts/contracts/utils/Bytes.sol\":{\"keccak256\":\"0xb363f660b3fe0d3aacceff1cab8ef825045bbd85b2f6bce0ffc87f05bb9e5708\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59d5d6d07405d49fca24017da36ea42de525ddb80541efb5dd0b9f0352c11ad7\",\"dweb:/ipfs/QmR2hUnWKwhzdwYF9EZUqVVdLHMwqxZSN7haJ4mgetVcSs\"]},\"lib/openzeppelin-contracts/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xc9f12663fcbc9f659610597f760a7b7258ac9e510419bdc68471eebe2ae56d4f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa8da3fd6dcec1e0a9348d296e2711f311285bcc3a574e5abefcf0f36c53893f\",\"dweb:/ipfs/QmPjf7gDHoUvgY9CdpnStpTuynAg4mFAAWotbT64EzmARy\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x947aadb127ce0a07acc4e04c3a6fb99d5f484421e91090942e74e5ce88ac6dd2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ef4fb852b15ca2610e24983fa352ae70e7be9a41365427770a3be60f422ffe8\",\"dweb:/ipfs/QmWhb3iVqZ7o6tD1fn58b4j5nYu4JjnvvVib2xRnUNurHs\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address","indexed":true},{"internalType":"address","name":"approved","type":"address","indexed":true},{"internalType":"uint256","name":"tokenId","type":"uint256","indexed":true}],"type":"event","name":"Approval","anonymous":false},{"inputs":[{"internalType":"address","name":"owner","type":"address","indexed":true},{"internalType":"address","name":"operator","type":"address","indexed":true},{"internalType":"bool","name":"approved","type":"bool","indexed":false}],"type":"event","name":"ApprovalForAll","anonymous":false},{"inputs":[{"internalType":"address","name":"from","type":"address","indexed":true},{"internalType":"address","name":"to","type":"address","indexed":true},{"internalType":"uint256","name":"tokenId","type":"uint256","indexed":true}],"type":"event","name":"Transfer","anonymous":false},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"addInvestment"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"approve"},{"inputs":[{"internalType":"address","name":"strategist","type":"address"},{"internalType":"bool","name":"authorized","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"authorizeStrategist"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function","name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}]},{"inputs":[{"internalType":"address[]","name":"assetAddresses","type":"address[]"},{"internalType":"euint64[]","name":"encryptedWeights","type":"uint256[]"},{"internalType":"bytes32","name":"encryptedRebalanceStrategy","type":"bytes32"},{"internalType":"address","name":"investor","type":"address"},{"internalType":"uint256","name":"initialInvestment","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createPortfolio","outputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"executeRebalancing"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"view","type":"function","name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}]},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"view","type":"function","name":"getPortfolioHoldings","outputs":[{"internalType":"address[]","name":"assetAddresses","type":"address[]"},{"internalType":"struct IStrategyWeaver.AssetHolding[]","name":"holdingsArray","type":"tuple[]","components":[{"internalType":"address","name":"assetAddress","type":"address"},{"internalType":"euint64","name":"encryptedBalance","type":"uint256"},{"internalType":"euint64","name":"encryptedTargetWeight","type":"uint256"},{"internalType":"uint256","name":"lastUpdate","type":"uint256"}]}]},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"view","type":"function","name":"getPortfolioPerformance","outputs":[{"internalType":"struct IStrategyWeaver.PerformanceData","name":"","type":"tuple","components":[{"internalType":"euint64","name":"encryptedInitialValue","type":"uint256"},{"internalType":"euint64","name":"encryptedCurrentValue","type":"uint256"},{"internalType":"euint64","name":"encryptedHighWaterMark","type":"uint256"},{"internalType":"uint256","name":"totalReturn","type":"uint256"},{"internalType":"uint256","name":"sharpeRatio","type":"uint256"},{"internalType":"uint256","name":"maxDrawdown","type":"uint256"},{"internalType":"uint256","name":"lastUpdate","type":"uint256"}]}]},{"inputs":[{"internalType":"address","name":"strategist","type":"address"}],"stateMutability":"view","type":"function","name":"getStrategistPortfolios","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function","name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"view","type":"function","name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"pause"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"safeTransferFrom"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"safeTransferFrom"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"setApprovalForAll"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"stateMutability":"view","type":"function","name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"transferFrom"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"unpause"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"withdrawInvestment"}],"devdoc":{"kind":"dev","methods":{"addInvestment(uint256,uint256)":{"params":{"amount":"Investment amount","tokenId":"Portfolio token ID"}},"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"authorizeStrategist(address,bool)":{"params":{"authorized":"Authorization status","strategist":"Strategist address"}},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"createPortfolio(address[],uint256[],bytes32,address,uint256)":{"params":{"assetAddresses":"Array of asset addresses","encryptedRebalanceStrategy":"Encrypted rebalancing strategy","encryptedWeights":"Array of encrypted allocation weights","initialInvestment":"Initial investment amount","investor":"Initial investor address"},"returns":{"tokenId":"The portfolio NFT token ID"}},"executeRebalancing(uint256)":{"params":{"tokenId":"Portfolio token ID"}},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"getPortfolioHoldings(uint256)":{"params":{"tokenId":"Portfolio token ID"},"returns":{"assetAddresses":"Array of asset addresses","holdingsArray":"Array of asset holdings"}},"getPortfolioPerformance(uint256)":{"params":{"tokenId":"Portfolio token ID"},"returns":{"_0":"performance Performance data struct"}},"getStrategistPortfolios(address)":{"params":{"strategist":"Strategist address"},"returns":{"_0":"portfolioIds Array of portfolio token IDs"}},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."},"withdrawInvestment(uint256,uint256)":{"params":{"amount":"Withdrawal amount","tokenId":"Portfolio token ID"}}},"version":1},"userdoc":{"kind":"user","methods":{"addInvestment(uint256,uint256)":{"notice":"Add investment to portfolio"},"authorizeStrategist(address,bool)":{"notice":"Authorize strategist"},"createPortfolio(address[],uint256[],bytes32,address,uint256)":{"notice":"Create a new ZK-Portfolio with encrypted allocations"},"executeRebalancing(uint256)":{"notice":"Execute confidential rebalancing for a portfolio"},"getPortfolioHoldings(uint256)":{"notice":"Get portfolio asset holdings"},"getPortfolioPerformance(uint256)":{"notice":"Get portfolio performance data"},"getStrategistPortfolios(address)":{"notice":"Get strategist's portfolios"},"pause()":{"notice":"Emergency pause"},"unpause()":{"notice":"Unpause"},"withdrawInvestment(uint256,uint256)":{"notice":"Withdraw investment from portfolio"}},"version":1}},"settings":{"remappings":["@ensdomains/=lib/v4-core/node_modules/@ensdomains/","@fhenixprotocol/cofhe-contracts/=lib/cofhe-contracts/contracts/","@openzeppelin/=lib/openzeppelin-contracts/","@uniswap/v4-core/=lib/v4-core/","@uniswap/v4-periphery/=lib/v4-periphery/","cofhe-contracts/=lib/cofhe-contracts/contracts/","ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-gas-snapshot/=lib/v4-periphery/lib/permit2/lib/forge-gas-snapshot/src/","forge-std/=lib/openzeppelin-contracts/lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","hardhat/=lib/v4-core/node_modules/hardhat/","openzeppelin-contracts/=lib/openzeppelin-contracts/","permit2/=lib/v4-periphery/lib/permit2/","solmate/=lib/solmate/","v4-core/=lib/v4-core/src/","v4-periphery/=lib/v4-periphery/"],"optimizer":{"enabled":true,"runs":1000000},"metadata":{"bytecodeHash":"none","appendCBOR":false},"compilationTarget":{"contracts/interfaces/IStrategyWeaver.sol":"IStrategyWeaver"},"evmVersion":"cancun","libraries":{},"viaIR":true},"sources":{"contracts/interfaces/IStrategyWeaver.sol":{"keccak256":"0x9eb8952b5f3e76bd2c6f6aef526bf5d34d586917eeb81717537074bf4f0392bd","urls":["bzz-raw://ae39a40bd3fcdd134bb7435760a80f285cf20e91148671acf8c48be446551915","dweb:/ipfs/QmRQm8vXMkntwXLLz7uyiBanKtaw3fGRfrNREytH8Bmods"],"license":"MIT"},"lib/cofhe-contracts/contracts/FHE.sol":{"keccak256":"0xa850911671ce967d9ef45aab0a06aa39deba00e2b0433e73e2cb0198c8461695","urls":["bzz-raw://6ff83ccb482f2ccbed559677667fe29de1e5da976e03a0390daf726ddf76a7ff","dweb:/ipfs/QmdHHmgf9sfYnHpnJsR8qo8zgpYVQffAyTepdQvQcySXrp"],"license":"BSD-3-Clause-Clear"},"lib/cofhe-contracts/contracts/ICofhe.sol":{"keccak256":"0x16eb495f5f2b8f26f14b592a414fea16a3342a6d14e33b1731d8fa73b10a4182","urls":["bzz-raw://9ad70bb3aa7bf5f048ea17ed8e4d3550a97a4234dbe67601cd37d764759cf633","dweb:/ipfs/Qmf7vpWCe32ZhihHJyF6z9GWGvpFmZioBEYNTSTdSiKkho"],"license":"UNLICENSED"},"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol":{"keccak256":"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f","urls":["bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3","dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/Bytes.sol":{"keccak256":"0xb363f660b3fe0d3aacceff1cab8ef825045bbd85b2f6bce0ffc87f05bb9e5708","urls":["bzz-raw://59d5d6d07405d49fca24017da36ea42de525ddb80541efb5dd0b9f0352c11ad7","dweb:/ipfs/QmR2hUnWKwhzdwYF9EZUqVVdLHMwqxZSN7haJ4mgetVcSs"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/Panic.sol":{"keccak256":"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a","urls":["bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a","dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/Strings.sol":{"keccak256":"0xc9f12663fcbc9f659610597f760a7b7258ac9e510419bdc68471eebe2ae56d4f","urls":["bzz-raw://fa8da3fd6dcec1e0a9348d296e2711f311285bcc3a574e5abefcf0f36c53893f","dweb:/ipfs/QmPjf7gDHoUvgY9CdpnStpTuynAg4mFAAWotbT64EzmARy"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol":{"keccak256":"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c","urls":["bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617","dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/math/Math.sol":{"keccak256":"0x947aadb127ce0a07acc4e04c3a6fb99d5f484421e91090942e74e5ce88ac6dd2","urls":["bzz-raw://0ef4fb852b15ca2610e24983fa352ae70e7be9a41365427770a3be60f422ffe8","dweb:/ipfs/QmWhb3iVqZ7o6tD1fn58b4j5nYu4JjnvvVib2xRnUNurHs"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol":{"keccak256":"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54","urls":["bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8","dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol":{"keccak256":"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3","urls":["bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03","dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ"],"license":"MIT"}},"version":1},"id":4}